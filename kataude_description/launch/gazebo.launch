<launch>
  <!-- 制御のゲインの読み込み。Gazebo自体が必要になるのでここにおく。 -->
  <rosparam file="$(find kataude_description)/launch/double_arm_controller.yaml" command="load"/>

  <param name="migiude_robot_description" command="$(find xacro)/xacro $(find kataude_description)/urdf/migiude.xacro"/>
  <node name="spawn_urdf_migi" pkg="gazebo_ros" type="spawn_model" args="-param migiude_robot_description -urdf -model kataude -x -1.0 -robot_namespace migiude"/>
  
  <param name="hidariude_robot_description" command="$(find xacro)/xacro $(find kataude_description)/urdf/hidariude.xacro"/>
  <node name="spawn_urdf_hidari" pkg="gazebo_ros" type="spawn_model" args="-param hidariude_robot_description -urdf -model hidariude -x 1.0 -Y 3.1415926 -robot_namespace hidariude"/>


  <!-- ボールモデルの追加 -->
  <param name="ball_description" command="$(find xacro)/xacro $(find kataude_description)/urdf/ball.urdf"/>
  <node name="spawn_ball" pkg="gazebo_ros" type="spawn_model" args="-param ball_description -urdf -model ball -x 1.0 -y 1.0 -z 1.0"/>
  
  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/> -->
  <!-- <node name="set_joint_angles" pkg="kataude_description" type="set45deg.py" output="screen" cwd="node">
    <param name="cwd" value="node"/>
  </node> -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/> -->
  <!-- <node if="$(arg gui)" name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" /> -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <include file="$(find kataude_description)/launch/double_arm_controller.launch" >
  </include>
</launch>
